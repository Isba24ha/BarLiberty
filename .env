# PostgreSQL (Neon) Connection
DATABASE_URL=postgresql://neondb_owner:npg_SBPhYXJIe90N@ep-weathered-shape-adq5qznq.c-2.us-east-1.aws.neon.tech/neondb?sslmode=require

# Server Configuration
# Render sets the port dynamically, so we leave it undefined here to rely on Render's PORT environment variable
# For local dev, we still specify the port to avoid conflicts on Windows.
PORT=3000  # For local development, avoid conflicts with other services
HOST=0.0.0.0  # Render uses 0.0.0.0, but for local dev you can set 127.0.0.1 if necessary
NODE_ENV=production  # Set to production for Render, 'development' for local dev

# Session Security - Render optimizations
SESSION_SECRET=your-secure-session-secret-32-characters-minimum
SESSION_COOKIE_SECURE=true  # Set to true on Render for security (use true for production)
SESSION_COOKIE_SAMESITE=strict  # 'strict' to enhance security in production
SESSION_COOKIE_DOMAIN=your-domain.com  # For production, set the domain as your actual domain

# CORS Configuration - Update based on where you're deploying
CLIENT_URL=https://your-frontend-app.com  # The URL of your frontend hosted on Render
ALLOWED_ORIGINS=https://your-frontend-app.com,http://localhost:5173

# Neon-specific Optimizations
PGSSLMODE=require
CONNECTION_TIMEOUT=60000  # Connection timeout in ms, adjust for performance
POOL_SIZE=10  # Increased pool size for production, adjust for local dev if needed

# Performance Optimizations
UV_THREADPOOL_SIZE=4  # Helps with Windows performance (keep for local dev)
NODE_NO_WARNINGS=1  # Suppress Windows-specific warnings

# Debugging & Logging (optional)
DEBUG=true  # Enable debug for local development (optional)
